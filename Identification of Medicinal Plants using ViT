{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":31040,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-07-04T15:27:41.638996Z","iopub.execute_input":"2025-07-04T15:27:41.639315Z","iopub.status.idle":"2025-07-04T15:27:42.002802Z","shell.execute_reply.started":"2025-07-04T15:27:41.639284Z","shell.execute_reply":"2025-07-04T15:27:42.001526Z"}},"outputs":[],"execution_count":1},{"cell_type":"code","source":"!pip install -U -q evaluate transformers datasets>=2.14.5 mlflow 2>/dev/null\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-04T15:27:42.004760Z","iopub.execute_input":"2025-07-04T15:27:42.005590Z","iopub.status.idle":"2025-07-04T15:28:08.528254Z","shell.execute_reply.started":"2025-07-04T15:27:42.005560Z","shell.execute_reply":"2025-07-04T15:28:08.527061Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"import warnings\nwarnings.filterwarnings(\"ignore\")  \n\nimport gc  \nimport numpy as np  \nimport pandas as pd  \nimport itertools  \nfrom collections import Counter  \nimport matplotlib.pyplot as plt  \nfrom sklearn.metrics import ( \n    accuracy_score,  \n    roc_auc_score,  \n    confusion_matrix,  \n    classification_report,  \n    f1_score  \n)\nimport evaluate  \nfrom datasets import Dataset, Image, ClassLabel \nfrom transformers import (  \n    TrainingArguments,  \n    Trainer,  \n    ViTImageProcessor, \n    ViTForImageClassification, \n    DefaultDataCollator \n)\nimport torch  \nfrom torch.utils.data import DataLoader  \nfrom torchvision.transforms import (  \n    CenterCrop,  \n    Compose,  \n    Normalize,  \n    RandomRotation,  \n    RandomResizedCrop,  \n    RandomHorizontalFlip,  \n    RandomAdjustSharpness, \n    Resize,  \n    ToTensor \n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-04T15:28:11.309555Z","iopub.execute_input":"2025-07-04T15:28:11.309841Z"}},"outputs":[{"name":"stderr","text":"2025-07-04 15:28:26.589939: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1751642906.867269      35 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1751642906.964554      35 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}],"execution_count":null}]}